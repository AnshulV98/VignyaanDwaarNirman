{"ast":null,"code":"var _jsxFileName = \"/home/devansh/Desktop/ADS/final/client/src/components/Landing.js\";\nimport React, { Component } from \"react\";\n\nclass Landing extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron mt -5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Weather Application\"))), React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      cityname: this.state.city,\n      weatherIcon: this.state.icon,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n\n      if (country && city) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`);\n        const response = await api_call.json();\n        this.setState({\n          city: `${response.name}, ${response.sys.country}`,\n          country: response.sys.country,\n          main: response.weather[0].main,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          error: false\n        }); // seting icons\n\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n        console.log(response);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({\n          icon: icons.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: icons.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({\n          icon: icons.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: icons.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: icons.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: icons.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: icons.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: icons.Clouds\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Landing;","map":{"version":3,"sources":["/home/devansh/Desktop/ADS/final/client/src/components/Landing.js"],"names":["React","Component","Landing","render","getWeather","state","error","city","icon","celsius","temp_max","temp_min","description","App","constructor","e","preventDefault","country","target","elements","value","api_call","fetch","Api_Key","response","json","setState","name","sys","main","weather","calCelsius","temp","get_WeatherIcon","weatherIcon","id","console","log","undefined","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","cell","Math","floor","Register","Login","Profile"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt -5\">\n          <div className=\"col-sm-8 mx-auto\">\n            <h1 className=\"text-center\">Weather Application</h1>\n          </div>\n        </div>\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Route exact path=\"/\" component={Landing} />\n        <Weather\n          cityname={this.state.city}\n          weatherIcon={this.state.icon}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\n      );\n\n      const response = await api_call.json();\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n\n      // seting icons\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n      console.log(response);\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}